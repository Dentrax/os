package:
  name: apache-nifi
  version: 1.26.0
  epoch: 2
  description: Apache NiFi is an easy to use, powerful, and reliable system to process and distribute data.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - apache-nifi-toolkit
      - bash
      - busybox
      - openjdk-11-jre
      - xmlstarlet

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - coreutils
      - maven
      - nodejs-20
      - npm
      - openjdk-11
      - openjdk-11-default-jvm
      - openssl-dev
      - rsync
      - wolfi-base
  environment:
    JAVA_HOME: /usr/lib/jvm/java-11-openjdk
    MAVEN_OPTS: |
      -Xmx4g
      -XX:ReservedCodeCacheSize=1g
      -XX:+UseG1GC
      -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN
      -Daether.connector.http.retryHandler.count=5
      -Daether.connector.http.connectionMaxTtl=30
    NIFI_HOME: "opt/nifi/nifi-current"
    NIFI_TOOLKIT_HOME: "opt/nifi/nifi-toolkit-current"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/nifi
      tag: rel/nifi-${{package.version}}
      expected-commit: 338083f6850b61cd2651e41bbd73b3cb5330d98c

  - runs: |
      ./mvnw -T$(nproc)C -q package \
        --no-snapshot-updates \
        --no-transfer-progress \
        --fail-fast \
        -DskipTests \
        -Dfrontend.skipTests=true \
        -Drat.skip=true
      mkdir -p ${{targets.destdir}}/usr/share/
      ls -latrd nifi-assembly || true
      ls -latrd nifi-assembly/target || true
      cp -ar nifi-assembly/target/nifi-${{package.version}}-bin/nifi-${{package.version}} ${{targets.destdir}}/usr/share/nifi

  - runs: |
      for dir in conf database_repository flowfile_repository content_repository provenance_repository state; do
        mkdir -p "${{targets.destdir}}/usr/share/nifi/${dir}"
      done

      for dir in conf database_repository flowfile_repository content_repository provenance_repository state; do
        mkdir -p ${{targets.destdir}}/usr/share/nifi/logs/${dir}
      done

  - runs: |
      echo "#!/bin/sh\n" > ${{targets.destdir}}/usr/share/nifi/bin/nifi-env.sh

  - runs: |
      mkdir -p ${{targets.destdir}}/usr/share/nifi/scripts
      install -m755 nifi-docker/dockerhub/sh/*.sh "${{targets.destdir}}"/usr/share/nifi/scripts/
      chmod -R +x ${{targets.destdir}}/usr/share/nifi/scripts
      rm ${{targets.destdir}}/usr/share/nifi/bin/*.bat

  - uses: strip

subpackages:
  - name: "${{package.name}}-toolkit"
    description: "Compatibility package to place binaries in the location expected by upstream image"
    pipeline:
      - working-directory: nifi-toolkit
        pipeline:
          - runs: |
              mkdir -p "${{targets.contextdir}}"/usr/share
              mvn clean install --no-snapshot-updates --no-transfer-progress --fail-fast -DskipTests
              ls -latrd target || true
              ls -latrd target/nifi* || true
              cp -ar nifi-assembly/target/nifi-toolkit-${{package.version}}-bin/nifi-toolkit-${{package.version}} ${{targets.destdir}}/usr/share/nifi-toolkit

  - name: "${{package.name}}-compat"
    description: "Compatibility package to place binaries in the location expected by upstream image"
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/${NIFI_HOME}
          mkdir -p "${{targets.contextdir}}"/${NIFI_TOOLKIT_HOME}
          ln -sf /usr/share/nifi "${{targets.contextdir}}"/${NIFI_HOME}
          ln -sf /usr/share/nifi-toolkit "${{targets.contextdir}}"/${NIFI_TOOLKIT_HOME}
          ln -sf /${NIFI_HOME} /opt/nifi/nifi-${{package.version}}
          ln -sf /${NIFI_TOOLKIT_HOME} /opt/nifi/nifi-toolkit-${{package.version}}

update:
  enabled: true
  ignore-regex-patterns:
    - -RC
    - -M
  github:
    identifier: apache/nifi
    use-tag: true
    strip-prefix: rel/nifi-
    tag-filter: rel/nifi-

test:
  pipeline:
    - runs: |
        export JAVA_HOME=/usr/lib/jvm/java-11-openjdk
        /usr/share/nifi/bin/nifi.sh start
